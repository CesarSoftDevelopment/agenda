==============================================================================================
/**
* Ejs serve para renderizar os códigos html
* View engine para fazer if echo dentro do html
* Um arquivo ejs seria uma junção de html com javascript
*/



1º criar uma pasta dentro do diretório
src

1.1: criar e colocar dentro da pasta src a pasta:
controllers
                                                                                               |
1.2: criar uma pasta:                                                                          |
views                                                                                          |
                                                                                               |
2º ir em server.js                                                                             |
2.1: passar o caminho absoluto das views                                                       |
app.set('views', path(__dirname, 'src', 'views') );                                            |
                                                                                               |
3º Criar arquivos fora do src                                                                  |
public                                                                                         |
                                                                                               |
3.1: public                                                                                    |
===============================================================================================|

Criar um servidor dentro da rede do google(instancias de vm)
nome = cursojs
regiao_proxima = america_sao_paulo
escolher máquinas(existem muitas máquinas)
sistema_operacional = linux(ubuntu)
firewall(http, https)
ip externo()














=============================FINALIZAR O PROCESSO===============================================
pkill node

================================================================================================
Não podemos acessar nosso servidor web via usuário e senha(BLOQUEADO)
nós acessamos ele através de chaves
SSH, daí precisamos ter uma chave pública e privada no seu computador, e colocar esta chave pública
dentro do servidor, vai casar estas duas chaves, aqui está dentro do computador com a chave que
está no servidor se bater não vai precisar logar com usuário e senha nem nada, vai conseguir logar
só com a chave mesmo.

Passos para fazer uma chave SSH

1º Passo: abrir o terminal
1.1: digitar(caminho/nome da chave)
ssh-keygen -f ~/.ssh/cursojs -t rsa -b 4096 ENTER

2º Passo: listar
ls ~/.ssh/curso*

3º Passo: pegar o que tem dentro
cat /home/cesardeveloper/.ssh/cursojs.pub

4º Passo: colar a chave dentro do servidor(texto enorme que aparece depois do comando acima)
4.1 Vai em metadados e adiciona a chave

-> com as chaves ssh conseguimos acessar o servidor online

5º Passo: acessar o servidor online
ssh nome do usuario(cesardeveloper@) ip 35.198.63.80

Precisamos criar um repositório para adicionar estes arquivos pra lá
=============================================================================================

/**
nano server.js -> para ver o arquivo server.js
NÃO PODEMOS SUBIR UM PROJETO COM A MESMA PORTA, TEM QUE SER PORTAS DIFERENTES...

*/
Instalando o Node e o Pm2
Vai subir aplicação quando reiniamos o servidor, automaticamente

1º Instalar o node(entra no servidor)

1.1: instala o node

1.2: entra no projeto(agenda)
cd agenda

1.3: instala os modulos do npm
depois instala o npm
npm i

1.4: Instalar pacote global do node Pm2 -> vai gerenciar nossas aplicações
sudo npm i -g pm2 + ENTER

1.5: subir PROCESSO
pm2 start /home/cesardeveloper/agenda/server.js --name Agenda

1.6: pm2 list pra ver

1.7: criar arquivo .env no terminal -> com o terminal aberto digita
nano .env

1.8: iniciar o processo
pm2 start Agenda

1.9: Parar o processo
pm2 stop Agenda

2º Para quando reinicar o servidor, reinciar o projeto

2.1:
pm2 startup

2.2: digitar o comando abaixo no servidor(deve aparecer um html)
curl http://localhost:3000
===============================================================================================
NGINX(proxy reverso)
É ter um servidor no meio do caminho

1º Acessar o servidor -> pode acessar através do dominio
-> o seu dominio(www.google.com) apontará para este ip do servidor

1.1 ssh cesardeveloper@ .....

1.2: instalar o NGINX
sudo apt install nginx

1.3: ver se foi iniciado o nginx
sudo systemctl nginx status

1.4



